
plugins {
        id 'org.openjfx.javafxplugin' version '0.0.13'
        id 'com.github.johnrengelman.shadow' version '7.1.2'
        id 'maven-publish'
}

allprojects {
    group = 'org.jabref'
    version = '1.1.0'

    repositories {
        jcenter()
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

javafx {
    version = "19"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing' ]
}

dependencies {
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta1'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    testImplementation group: 'junit', name: 'junit', version:'4.12'
    testImplementation group: 'org.mockito', name: 'mockito-all', version:'1.10.19'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}
signing {
    sign configurations.archives
}
uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

     
    }
  }
}
